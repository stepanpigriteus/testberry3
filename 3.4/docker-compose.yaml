version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: wbf_app
    ports:
      - "${APP_PORT}:${APP_PORT}"
    depends_on:
      - kafka
      - minio
      - db
      - migrate
    environment:
      APP_PORT: ${APP_PORT}
      KAFKA_BROKERS: kafka:${KAFKA_PORT_1}
      KAFKA_TOPIC: ${KAFKA_TOPIC}
      KAFKA_GROUP_ID: ${KAFKA_GROUP_ID}
      MINIO_ENDPOINT: minio:${MINIO_PORT_API}
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
      MINIO_BUCKET: ${MINIO_BUCKET}
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}?sslmode=disable

  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: ${ZOOKEEPER_CLIENT_PORT}
      ZOOKEEPER_TICK_TIME: ${ZOOKEEPER_TICK_TIME}
    ports:
      - "${ZOOKEEPER_CLIENT_PORT}:${ZOOKEEPER_CLIENT_PORT}"

  kafka:
    image: confluentinc/cp-kafka:7.6.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "${KAFKA_PORT_1}:${KAFKA_PORT_1}"
      - "${KAFKA_PORT_2}:${KAFKA_PORT_2}"
    environment:
      KAFKA_BROKER_ID: ${KAFKA_BROKER_ID}
      KAFKA_ZOOKEEPER_CONNECT: ${KAFKA_ZOOKEEPER_CONNECT}
      KAFKA_ADVERTISED_LISTENERS: ${KAFKA_ADVERTISED_LISTENERS}
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: ${KAFKA_LISTENER_SECURITY_PROTOCOL_MAP}
      KAFKA_INTER_BROKER_LISTENER_NAME: ${KAFKA_INTER_BROKER_LISTENER_NAME}
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: ${KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR}

  minio:
    image: minio/minio:latest
    container_name: minio
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    ports:
      - "${MINIO_PORT_API}:${MINIO_PORT_API}"
      - "${MINIO_PORT_CONSOLE}:${MINIO_PORT_CONSOLE}"
    command: server /data --console-address ":${MINIO_PORT_CONSOLE}"
    volumes:
      - minio_data:/data

  db:
    image: postgres:15
    container_name: wbf_db
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data

  migrate:
    image: migrate/migrate:v4.15.2
    container_name: wbf_migrate
    command: [
      "-path", "/migrations",
      "-database", "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}?sslmode=disable",
      "up"
    ]
    volumes:
      - ./migrations:/migrations
    depends_on:
      - db
    restart: "on-failure"

volumes:
  pg_data:
  minio_data:
